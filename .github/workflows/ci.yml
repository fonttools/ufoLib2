name: Continuous Integration

on:
  push:
    branches: [master]
    tags: ["v*.*.*"]
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Lint
      run: |
        pip install tox
        tox -e lint

  docs:  # To see if they build.
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Lint
      run: |
        pip install tox
        tox -e docs

  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        python-version: ['3.7', '3.10']
        platform: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install packages
      run: pip install tox coverage
    - name: Run Tox
      run: tox -e py-cov
    - name: Re-run Tox without cattrs
      if: startsWith(matrix.platform, 'ubuntu-latest') && startsWith(matrix.python-version, '3.10')
      run: |
        tox -e py-nocattrs
    - name: Re-run Tox without msgpack
      if: startsWith(matrix.platform, 'ubuntu-latest') && startsWith(matrix.python-version, '3.10')
      run: |
        tox -e py-nomsgpack
    - name: Produce coverage files
      run: |
        coverage combine
        coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  deploy:
    # only run if the commit is tagged...
    if: startsWith(github.ref, 'refs/tags/v')
    # ... and the previous jobs completed successfully
    needs:
      - lint
      - docs
      - test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        pip install build twine
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m build
        twine check dist/*
        twine upload dist/*
